spring.data.mongodb.database=${env.MONGO_DATABASE}
spring.data.mongodb.uri=mongodb+srv://${env.MONGO_USERNAME}:${env.MONGO_PASSWORD}@${env.MONGO_CLUSTER}
spring.data.mongodb.auto-index-creation=true

spring.security.jwt.secret=${env.JWT_SECRET_KEY}

# http2 only works over HTTPS(configured SSL is needed), BUT DO I NEED http2 really?
#server.http2.enabled=true
#server.compression.enabled=true
#server.compression.min-response-size=2048
# Define MIME types to be compressed (common text-based types are included here)
#server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
# Optionally, you can specify the excluded user agents
#server.compression.excluded-user-agents=SomeUserAgent,AnotherUserAgent

server.port=${env.SERVER_PORT}

server.ssl.enabled=true
server.ssl.key-store=${env.KEY_STORE_PATH}
server.ssl.key-store-password=${env.KEY_STORE_PASSWORD}
server.ssl.key-store-type=${env.KEY_STORE_TYPE}
server.ssl.key-alias=${env.KEY_ALIAS}
server.ssl.key-password=${env.KEY_PASSWORD}
#server.forward-headers-strategy=NATIVE #You need to inform Spring that it should use the X-Forwarded-Proto header to determine the original protocol. https://stackoverflow.com/questions/68318269/spring-server-forward-headers-strategy-native-vs-framework

server.error.include-message=always

#server.tomcat.threads.max=400
#server.tomcat.threads.min-spare=30

spring.mail.host=${env.EMAIL_HOST}
spring.mail.port=${env.EMAIL_PORT}
spring.mail.username=${env.EMAIL_USERNAME}
spring.mail.password=${env.EMAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=${env.EMAIL_CONNECTION_TIMEOUT}
spring.mail.properties.mail.smtp.timeout=${env.EMAIL_TIMEOUT}
spring.mail.properties.mail.smtp.writetimeout=${env.EMAIL_WRITE_TIMEOUT}