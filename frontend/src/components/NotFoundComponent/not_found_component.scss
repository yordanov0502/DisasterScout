.not_found_component {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  text-align: center;
  text-shadow: 0px 4px #000000;
  color: white;
  font-size: 38px;

  position: relative;
  width: 70%;
  height: 70%;

  &__button {
    cursor: pointer;
    font-weight: 600;
    font-family: inherit;
    width: 10em;
    height: 2.6em;
    overflow: hidden;
    margin: 20px;
    font-size: 20px;
    text-shadow: 0px 2px #000000;
    z-index: 1;
    color: white; /*color of text*/
    border: 4px solid #017c45;
    position: relative;
    background-color: rgb(60, 60, 60, 0.7);
    transition: background-color 0.3s;
  }

  &__button::before {
    position: absolute;
    content: "";
    background-color: #009F58;
    left: 0; //? added after Progress loader was changed to PageLoader because of overriding issue with MUI button, which is now ordinary <button>
    top: 0; //? added after Progress loader was changed to PageLoader because of overriding issue with MUI button, which is now ordinary <button>
    width: 100%;
    height: 100%;
    z-index: -1;
    transform: scale(0);
    transition: transform 0.3s;
  }

  // Adding new ::after pseudo-element
  &__button::after {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0); // Initially transparent
    transition: background-color 0.3s;
    z-index: 0; // Below the text but above the ::before element
    pointer-events: none; //? to ensure that it does not interfere with the click events on the button. When this property is set to none, any click or hover on that element will pass through it and target whatever is underneath it instead.
  }

  &__button:hover {
    color: white;
    background-color: rgb(60, 60, 60, 0.7);
  }

  &__button:hover::before {
    transform: scale(1); /* scale to the full size of the button */
  }

  //? This works only when the button is both hovered and clicked simultaneously
  &__button:hover:active::after {
    background-color: rgba(255, 255, 255, 0.2); // Semi-transparent white
  }

  //! This media query overrides all previous configurations for the specified button. So if I use it after any other configurations it will disable it on touchscreen devices.
  // Disables hover effect on touchscreen devices
  @media (pointer: coarse) {
    width: 90%;
    height: 90%;
    font-size: 29px;

    &__button:hover::before {
      transform: scale(0); /* Keeps it at the normal state */
    }
    &__button:active::before {
      transform: scale(1); /* Scales to full size on click/active */
    }
    &__button:active {
      background-color: rgb(60, 60, 60, 0.7); /* Grey background on active */
    }
    &__button:not(:active) {
      background-color: rgb(60,60,60,0.7); /* Resets to grey background after release */
    }
    &__button:hover:active::after {
      background-color: rgba(255, 255, 255, 0); // Make it transparent
    }
  }
}
